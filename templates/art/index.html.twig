{% extends 'base.html.twig' %}

{% block title %}Art Index{% endblock %}

{% block body %}
    <h1>Art Index</h1>

    <div class="container">
        <div class="row">
            {% for art in art %}
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">{{ art.artTitle }}</h5>
                            <div class="row">
                                <div class="col-md-6">
                                    <p class="card-text">Art Price: {{ art.artPrice }}</p>
                                </div>
                                <div class="actions">
                                   <form action="{{ path('update_isavailable') }}" method="post">
                                        <input type="hidden" name="art_ref" value="{{ art.artRef }}">
                                        <input type="hidden" name="art_title" value="{{ art.artTitle }}">
                                        <input type="hidden" name="art_price" value="{{ art.artPrice }}">
                                        <button type="submit" class="add-button">Add</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>

    <a href="{{ path('app_art_new') }}" class="btn btn-success">Create new</a>

    <div class="cart_content">
        <!-- This is where the selected items will be displayed -->
    </div>

    <form action="{{ path('confirm_order') }}" method="post">
        <button type="submit" class="btn btn-primary">Confirm Order</button>
    </form>

    <style>
        .add-button {
            display: inline-block;
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .add-button:hover {
            background-color: #0056b3;
        }

        .add-button.disabled {
            pointer-events: none;
            opacity: 0.5;
        }

        .deselect-button {
            background-color: #dc3545;
            color: #fff;
            border: none;
            border-radius: 1px;
            padding: 5px 8px;
            font-size: 9px;
            margin-left: 5px;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var addButton = document.querySelectorAll('.add-button');
            var cartContent = document.querySelector('.cart_content');

            // Retrieve previously added items from local storage
            var storedItems = localStorage.getItem('addedItems');
            
            if (storedItems) {
                cartContent.innerHTML = storedItems;

                // Disable corresponding "Add" buttons for items already in the cart
                var cartItems = cartContent.querySelectorAll('[data-art-title]');
                cartItems.forEach(function(item) {
                    var title = item.getAttribute('data-art-title');
                    var price = item.getAttribute('data-art-price');
                    addButton.forEach(function(button) {
                        var addButtonTitle = button.parentNode.querySelector('input[name="art_title"]').value;
                        var addButtonPrice = button.parentNode.querySelector('input[name="art_price"]').value;
                        if (addButtonTitle === title && addButtonPrice === price) {
                            button.classList.add('disabled');
                        }
                    });
                });
            }

            addButton.forEach(function(button) {
                button.addEventListener('click', function(event) {
                    event.preventDefault();

                    var artTitle = this.parentNode.querySelector('input[name="art_title"]').value;
                    var artPrice = this.parentNode.querySelector('input[name="art_price"]').value;

                    // Check if the art is already in the cart
                    var inCart = false;
                    var cartItems = cartContent.querySelectorAll('[data-art-title]');
                    cartItems.forEach(function(item) {
                        if (item.getAttribute('data-art-title') === artTitle) {
                            inCart = true;
                        }
                    });

                    if (!inCart) {
                        // Create HTML for the art item
                        var artHtml = '<div data-art-title="' + artTitle + '" data-art-price="' + artPrice + '">';
                        artHtml += '<strong>Title:</strong> ' + artTitle + '<br>';
                        artHtml += '<strong>Price:</strong> ' + artPrice;
                        artHtml += '<button class="deselect-button">Deselect</button></div>';

                        // Append the art item to the existing content of the shopping cart popup
                        cartContent.innerHTML += artHtml;
                        localStorage.setItem('addedItems', cartContent.innerHTML);

                        // Show the shopping cart popup
                        document.getElementById('cart-popup').style.display = 'block';
                    }

                    // Disable the clicked button
                    this.classList.add('disabled');
                });
            });

            // Add event listener to deselect arts
            cartContent.addEventListener('click', function(event) {
                if (event.target && event.target.classList.contains('deselect-button')) {
                    var artItem = event.target.parentNode;
                    var title = artItem.getAttribute('data-art-title');
                    var price = artItem.getAttribute('data-art-price');

                    // Remove the clicked art item from the popup content
                    artItem.remove();

                    // Save updated items to local storage
                    localStorage.setItem('addedItems', cartContent.innerHTML);

                    // Reactivate the corresponding "Add" button
                    addButton.forEach(function(button) {
                        var addButtonTitle = button.parentNode.querySelector('input[name="art_title"]').value;
                        var addButtonPrice = button.parentNode.querySelector('input[name="art_price"]').value;
                        if (addButtonTitle === title && addButtonPrice === price) {
                            button.classList.remove('disabled');
                        }
                    });
                }
            });
        });
    </script>

{% endblock %}
